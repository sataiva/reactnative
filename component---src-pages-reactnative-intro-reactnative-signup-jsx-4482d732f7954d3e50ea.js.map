{"version":3,"sources":["webpack:///component---src-pages-reactnative-intro-reactnative-signup-jsx-4482d732f7954d3e50ea.js","webpack:///./src/pages/reactnative-intro/reactnative-signup.jsx"],"names":["webpackJsonp","./node_modules/babel-loader/lib/index.js?{\"plugins\":[\"/Users/prakash/Documents/reactjs/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\",\"/Users/prakash/Documents/reactjs/node_modules/babel-plugin-lodash/lib/index.js\",\"/Users/prakash/Documents/reactjs/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/Users/prakash/Documents/reactjs/node_modules/babel-plugin-transform-object-assign/lib/index.js\"],\"presets\":[[\"/Users/prakash/Documents/reactjs/node_modules/babel-preset-env/lib/index.js\",{\"loose\":true,\"uglify\":true,\"modules\":\"commonjs\",\"targets\":{\"browsers\":[\"> 1%\",\"last 2 versions\",\"IE >= 9\"]},\"exclude\":[\"transform-regenerator\",\"transform-es2015-typeof-symbol\"]}],\"/Users/prakash/Documents/reactjs/node_modules/babel-preset-stage-0/lib/index.js\",\"/Users/prakash/Documents/reactjs/node_modules/babel-preset-react/lib/index.js\"],\"cacheDirectory\":true}!./src/pages/reactnative-intro/reactnative-signup.jsx","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_MainLayout","_MainLayout2","_CtaButton","_CtaButton2","_Block","_Block2","inputboxes","signupfunction","signupquery","props","createElement","value","href","to"],"mappings":"AAAAA,cAAc,qBAERC,u6BACA,SAAUC,EAAQC,EAASC,GAEhC,YAoBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAlBvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,iCDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,mCDcKQ,EAAeP,EAAuBM,GCb3CE,EAAAT,EAAA,kCDiBKU,EAAcT,EAAuBQ,GChB1CE,EAAAX,EAAA,8BDoBKY,EAAUX,EAAuBU,GClBhCE,01BA0BAC,4qBAyBAC,8QDvBLhB,GAAQK,QCkCM,SAAAY,GAAA,MACbV,GAAAF,QAAAa,cAAAT,EAAAJ,QAAA,KACEE,EAAAF,QAAAa,cAAA,kCACAX,EAAAF,QAAAa,cAAA,uBACaX,EAAAF,QAAAa,cAAA,oBADb,uJAMAX,EAAAF,QAAAa,cAAA,sCACAX,EAAAF,QAAAa,cAAA,sJAIAX,EAAAF,QAAAa,cAAAL,EAAAR,SAAOc,MAAOL,IAEdP,EAAAF,QAAAa,cAAA,wCACAX,EAAAF,QAAAa,cAAA,sHAIAX,EAAAF,QAAAa,cAAA,uHAGEX,EAAAF,QAAAa,cAAA,KAAGE,KAAK,iDACNb,EAAAF,QAAAa,cAAA,4BAJJ,qEAQAX,EAAAF,QAAAa,cAAAL,EAAAR,SAAOc,MAAOH,IAEdT,EAAAF,QAAAa,cAAA,sKAKAX,EAAAF,QAAAa,cAAAL,EAAAR,SAAOc,MAAOJ,IAEdR,EAAAF,QAAAa,cAAA,+BACAX,EAAAF,QAAAa,cAAA,8IAIAX,EAAAF,QAAAa,cAAAP,EAAAN,SAAWgB,GAAG,wCAAd,YACAd,EAAAF,QAAAa,cAAAP,EAAAN,SAAWgB,GAAG,6CAAd,UDQHtB,EAAOC,QAAUA,EAAiB","file":"component---src-pages-reactnative-intro-reactnative-signup-jsx-4482d732f7954d3e50ea.js","sourcesContent":["webpackJsonp([12231163554594116000],{\n\n/***/ \"./node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"/Users/prakash/Documents/reactjs/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\\\",\\\"/Users/prakash/Documents/reactjs/node_modules/babel-plugin-lodash/lib/index.js\\\",\\\"/Users/prakash/Documents/reactjs/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/Users/prakash/Documents/reactjs/node_modules/babel-plugin-transform-object-assign/lib/index.js\\\"],\\\"presets\\\":[[\\\"/Users/prakash/Documents/reactjs/node_modules/babel-preset-env/lib/index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"/Users/prakash/Documents/reactjs/node_modules/babel-preset-stage-0/lib/index.js\\\",\\\"/Users/prakash/Documents/reactjs/node_modules/babel-preset-react/lib/index.js\\\"],\\\"cacheDirectory\\\":true}!./src/pages/reactnative-intro/reactnative-signup.jsx\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _MainLayout = __webpack_require__(\"./src/components/MainLayout.jsx\");\n\t\n\tvar _MainLayout2 = _interopRequireDefault(_MainLayout);\n\t\n\tvar _CtaButton = __webpack_require__(\"./src/components/CtaButton.jsx\");\n\t\n\tvar _CtaButton2 = _interopRequireDefault(_CtaButton);\n\t\n\tvar _Block = __webpack_require__(\"./src/components/Block.jsx\");\n\t\n\tvar _Block2 = _interopRequireDefault(_Block);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar inputboxes = \"\\nimport React, { Component } from \\\"react\\\";\\nimport { View, TextInput, Button } from \\\"react-native\\\";\\nclass SignupScreen extends Component{\\n    state = {\\n        name:\\\"\\\",\\n        phone: \\\"\\\",\\n        password: \\\"\\\",\\n        message:\\\"\\\"\\n    };\\n\\n    signup=()=>{\\n    }\\n\\n    render(){\\n        return <View>\\n                <TextInputplaceholder=\\\"Name\\\" style={styles.input} onChangeText={e => this.setState({ name: e })}/>\\n                <TextInputplaceholder=\\\"Phone\\\" style={styles.input} onChangeText={e => this.setState({ phone: e })}/>\\n                <TextInputplaceholder=\\\"Password\\\" style={styles.input} onChangeText={e => this.setState({ password: e })}/>\\n                <Text style={styles.messagetext}>{this.state.message}</Text>\\n                <Button onPress={this.createaccount}>Signup</Button>\\n                </View>\\n    }\\n}\\n\";\n\t\n\tvar signupfunction = \"\\ncreateaccount = () => {\\n    const { phone, password, name, message } = this.state;\\n    this.props\\n      .mutate({\\n        variables: {\\n          phone: phone.trim(),\\n          password: password.trim(),\\n          name: name.trim()\\n        }\\n      })\\n      .then(resp => {\\n        if (resp.data.createUser) {\\n          const id = resp.data.createUser.id;\\n          this.setState({message: \\\"Successfully created an account\\\", phone: \\\"\\\", password: \\\"\\\", name: \\\"\\\"});\\n        } else {\\n          this.setState({ message: \\\"Invalid credentials\\\" });\\n        }\\n      })\\n      .catch(error => {\\n        this.setState({ message: \\\"Invalid credentials\\\" });\\n      });\\n  };\\n\";\n\t\n\tvar signupquery = \"\\nconst SignupQuery = gql'\\n  mutation CreateUser($phone: String!, $password: String!, $name: String!) {\\n    createUser(phone: $phone, password: $password, name: $name) {\\n      id\\n    }\\n  }\\n';\\nconst SignupScreenWithQuery = graphql(SignupQuery)(SignupScreen);\\n\";\n\t\n\texports.default = function (props) {\n\t  return _react2.default.createElement(\n\t    _MainLayout2.default,\n\t    null,\n\t    _react2.default.createElement(\n\t      \"h2\",\n\t      null,\n\t      \"React Native Sign Up\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"Like login,\",\n\t      _react2.default.createElement(\n\t        \"b\",\n\t        null,\n\t        \" Signup\"\n\t      ),\n\t      \" is also a primary function needed for Mobile Application.User authentication will perform only after the successful user creation in the database.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"h4\",\n\t      null,\n\t      \"1. Creat a signup screen\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"To create a signup screen, i am using TextInput components to get values from user and a Button component to invoke signup functionality.\"\n\t    ),\n\t    _react2.default.createElement(_Block2.default, { value: inputboxes }),\n\t    _react2.default.createElement(\n\t      \"h4\",\n\t      null,\n\t      \"2. Define a login function\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"Here i am gonna use this.mutate() method to pass user values as arguments to a query and register a user.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"To use this method we should wrap our component inside database connectivity components.Here i am using the\",\n\t      _react2.default.createElement(\n\t        \"a\",\n\t        { href: \"https://github.com/apollographql/react-apollo\" },\n\t        _react2.default.createElement(\n\t          \"b\",\n\t          null,\n\t          \" react-apollo \"\n\t        )\n\t      ),\n\t      \"package to establish a database connection and a query execution.\"\n\t    ),\n\t    _react2.default.createElement(_Block2.default, { value: signupquery }),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"This is nothing but getting values from input boxes and do some validations.After validation success hit the database to authenticate user login details.\"\n\t    ),\n\t    _react2.default.createElement(_Block2.default, { value: signupfunction }),\n\t    _react2.default.createElement(\n\t      \"h4\",\n\t      null,\n\t      \"3. Display result\"\n\t    ),\n\t    _react2.default.createElement(\n\t      \"p\",\n\t      null,\n\t      \"Now we have to enter a name, phone number and password to create user account.The database result will be displayed as a message.\"\n\t    ),\n\t    _react2.default.createElement(\n\t      _CtaButton2.default,\n\t      { to: \"/reactnative-intro/reactnative-login\" },\n\t      \"Previous\"\n\t    ),\n\t    _react2.default.createElement(\n\t      _CtaButton2.default,\n\t      { to: \"/reactnative-intro/reactnative-navigation\" },\n\t      \"Next\"\n\t    )\n\t  );\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-reactnative-intro-reactnative-signup-jsx-4482d732f7954d3e50ea.js","import React from \"react\";\nimport MainLayout from \"../../components/MainLayout\";\nimport CtaButton from \"../../components/CtaButton\";\nimport Block from \"../../components/Block\";\n\nconst inputboxes = `\nimport React, { Component } from \"react\";\nimport { View, TextInput, Button } from \"react-native\";\nclass SignupScreen extends Component{\n    state = {\n        name:\"\",\n        phone: \"\",\n        password: \"\",\n        message:\"\"\n    };\n\n    signup=()=>{\n    }\n\n    render(){\n        return <View>\n                <TextInputplaceholder=\"Name\" style={styles.input} onChangeText={e => this.setState({ name: e })}/>\n                <TextInputplaceholder=\"Phone\" style={styles.input} onChangeText={e => this.setState({ phone: e })}/>\n                <TextInputplaceholder=\"Password\" style={styles.input} onChangeText={e => this.setState({ password: e })}/>\n                <Text style={styles.messagetext}>{this.state.message}</Text>\n                <Button onPress={this.createaccount}>Signup</Button>\n                </View>\n    }\n}\n`;\n\nconst signupfunction = `\ncreateaccount = () => {\n    const { phone, password, name, message } = this.state;\n    this.props\n      .mutate({\n        variables: {\n          phone: phone.trim(),\n          password: password.trim(),\n          name: name.trim()\n        }\n      })\n      .then(resp => {\n        if (resp.data.createUser) {\n          const id = resp.data.createUser.id;\n          this.setState({message: \"Successfully created an account\", phone: \"\", password: \"\", name: \"\"});\n        } else {\n          this.setState({ message: \"Invalid credentials\" });\n        }\n      })\n      .catch(error => {\n        this.setState({ message: \"Invalid credentials\" });\n      });\n  };\n`;\n\nconst signupquery = `\nconst SignupQuery = gql'\n  mutation CreateUser($phone: String!, $password: String!, $name: String!) {\n    createUser(phone: $phone, password: $password, name: $name) {\n      id\n    }\n  }\n';\nconst SignupScreenWithQuery = graphql(SignupQuery)(SignupScreen);\n`;\n\nexport default props =>\n  <MainLayout>\n    <h2>React Native Sign Up</h2>\n    <p>\n      Like login,<b> Signup</b> is also a primary function needed for Mobile\n      Application.User authentication will perform only after the successful\n      user creation in the database.\n    </p>\n\n    <h4>1. Creat a signup screen</h4>\n    <p>\n      To create a signup screen, i am using TextInput components to get values\n      from user and a Button component to invoke signup functionality.\n    </p>\n    <Block value={inputboxes} />\n\n    <h4>2. Define a login function</h4>\n    <p>\n      Here i am gonna use this.mutate() method to pass user values as arguments\n      to a query and register a user.\n    </p>\n    <p>\n      To use this method we should wrap our component inside database\n      connectivity components.Here i am using the\n      <a href=\"https://github.com/apollographql/react-apollo\">\n        <b> react-apollo </b>\n      </a>\n      package to establish a database connection and a query execution.\n    </p>\n    <Block value={signupquery} />\n\n    <p>\n      This is nothing but getting values from input boxes and do some\n      validations.After validation success hit the database to authenticate user\n      login details.\n    </p>\n    <Block value={signupfunction} />\n\n    <h4>3. Display result</h4>\n    <p>\n      Now we have to enter a name, phone number and password to create user\n      account.The database result will be displayed as a message.\n    </p>\n    <CtaButton to=\"/reactnative-intro/reactnative-login\">Previous</CtaButton>\n    <CtaButton to=\"/reactnative-intro/reactnative-navigation\">Next</CtaButton>\n  </MainLayout>;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reactnative-intro/reactnative-signup.jsx"],"sourceRoot":""}