webpackJsonp([0xa9bdd2730d495000],{'./node_modules/babel-loader/lib/index.js?{"plugins":["/Users/prakash/Documents/reactjs/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-lodash/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-add-module-exports/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-transform-object-assign/lib/index.js"],"presets":[["/Users/prakash/Documents/reactjs/node_modules/babel-preset-env/lib/index.js",{"loose":true,"uglify":true,"modules":"commonjs","targets":{"browsers":["> 1%","last 2 versions","IE >= 9"]},"exclude":["transform-regenerator","transform-es2015-typeof-symbol"]}],"/Users/prakash/Documents/reactjs/node_modules/babel-preset-stage-0/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-preset-react/lib/index.js"],"cacheDirectory":true}!./src/pages/reactnative-intro/reactnative-signup.jsx':function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var s=n("./node_modules/react/react.js"),r=a(s),o=n("./src/components/MainLayout.jsx"),l=a(o),u=n("./src/components/CtaButton.jsx"),i=a(u),c=n("./src/components/Block.jsx"),d=a(c),p='\nimport React, { Component } from "react";\nimport { View, TextInput, Button } from "react-native";\nclass SignupScreen extends Component{\n    state = {\n        name:"",\n        phone: "",\n        password: "",\n        message:""\n    };\n\n    signup=()=>{\n    }\n\n    render(){\n        return <View>\n                <TextInputplaceholder="Name" style={styles.input} onChangeText={e => this.setState({ name: e })}/>\n                <TextInputplaceholder="Phone" style={styles.input} onChangeText={e => this.setState({ phone: e })}/>\n                <TextInputplaceholder="Password" style={styles.input} onChangeText={e => this.setState({ password: e })}/>\n                <Text style={styles.messagetext}>{this.state.message}</Text>\n                <Button onPress={this.createaccount}>Signup</Button>\n                </View>\n    }\n}\n',m='\ncreateaccount = () => {\n    const { phone, password, name, message } = this.state;\n    this.props\n      .mutate({\n        variables: {\n          phone: phone.trim(),\n          password: password.trim(),\n          name: name.trim()\n        }\n      })\n      .then(resp => {\n        if (resp.data.createUser) {\n          const id = resp.data.createUser.id;\n          this.setState({message: "Successfully created an account", phone: "", password: "", name: ""});\n        } else {\n          this.setState({ message: "Invalid credentials" });\n        }\n      })\n      .catch(error => {\n        this.setState({ message: "Invalid credentials" });\n      });\n  };\n',h="\nconst SignupQuery = gql'\n  mutation CreateUser($phone: String!, $password: String!, $name: String!) {\n    createUser(phone: $phone, password: $password, name: $name) {\n      id\n    }\n  }\n';\nconst SignupScreenWithQuery = graphql(SignupQuery)(SignupScreen);\n";t.default=function(e){return r.default.createElement(l.default,null,r.default.createElement("h2",null,"React Native Sign Up"),r.default.createElement("p",null,"Like login,",r.default.createElement("b",null," Signup")," is also a primary function needed for Mobile Application.User authentication will perform only after the successful user creation in the database."),r.default.createElement("h4",null,"1. Creat a signup screen"),r.default.createElement("p",null,"To create a signup screen, i am using TextInput components to get values from user and a Button component to invoke signup functionality."),r.default.createElement(d.default,{value:p}),r.default.createElement("h4",null,"2. Define a login function"),r.default.createElement("p",null,"Here i am gonna use this.mutate() method to pass user values as arguments to a query and register a user."),r.default.createElement("p",null,"To use this method we should wrap our component inside database connectivity components.Here i am using the",r.default.createElement("a",{href:"https://github.com/apollographql/react-apollo"},r.default.createElement("b",null," react-apollo ")),"package to establish a database connection and a query execution."),r.default.createElement(d.default,{value:h}),r.default.createElement("p",null,"This is nothing but getting values from input boxes and do some validations.After validation success hit the database to authenticate user login details."),r.default.createElement(d.default,{value:m}),r.default.createElement("h4",null,"3. Display result"),r.default.createElement("p",null,"Now we have to enter a name, phone number and password to create user account.The database result will be displayed as a message."),r.default.createElement(i.default,{to:"/reactnative-intro/reactnative-login"},"Previous"),r.default.createElement(i.default,{to:"/reactnative-intro/reactnative-navigation"},"Next"))},e.exports=t.default}});
//# sourceMappingURL=component---src-pages-reactnative-intro-reactnative-signup-jsx-4482d732f7954d3e50ea.js.map