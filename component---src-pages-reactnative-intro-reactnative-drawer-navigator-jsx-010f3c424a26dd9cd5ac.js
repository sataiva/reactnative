webpackJsonp([0x7cd233d68e2bd400],{"./src/images/drawernavigator/designeddrawer.png":function(e,t,n){e.exports=n.p+"static/designeddrawer.937d2a97.png"},"./src/images/drawernavigator/emptyhome.png":function(e,t,n){e.exports=n.p+"static/emptyhome.c9b23dce.png"},"./src/images/drawernavigator/emptyprofile.png":function(e,t,n){e.exports=n.p+"static/emptyprofile.46ceace4.png"},"./src/images/drawernavigator/newdrawer.png":function(e,t,n){e.exports=n.p+"static/newdrawer.20eff83c.png"},'./node_modules/babel-loader/lib/index.js?{"plugins":["/Users/prakash/Documents/reactjs/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-lodash/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-add-module-exports/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-transform-object-assign/lib/index.js"],"presets":[["/Users/prakash/Documents/reactjs/node_modules/babel-preset-env/lib/index.js",{"loose":true,"uglify":true,"modules":"commonjs","targets":{"browsers":["> 1%","last 2 versions","IE >= 9"]},"exclude":["transform-regenerator","transform-es2015-typeof-symbol"]}],"/Users/prakash/Documents/reactjs/node_modules/babel-preset-stage-0/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-preset-react/lib/index.js"],"cacheDirectory":true}!./src/pages/reactnative-intro/reactnative-drawerNavigator.jsx':function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=n("./node_modules/react/react.js"),o=a(r),i=n("./node_modules/react-helmet/lib/Helmet.js"),s=a(i),l=n("./src/components/MainLayout.jsx"),c=a(l),d=n("./src/components/CtaButton.jsx"),u=a(d),m=n("./src/components/Block.jsx"),p=a(m),g=n("./src/images/drawernavigator/emptyhome.png"),f=a(g),w=n("./src/images/drawernavigator/emptyprofile.png"),v=a(w),h=n("./src/images/drawernavigator/newdrawer.png"),y=a(h),x=n("./src/images/drawernavigator/designeddrawer.png"),b=a(x),E='\nimport React from "react";\nimport { View, Text, Button, StyleSheet, Image } from "react-native";\nclass Home extends React.Component {\n  static navigationOptions = {};\n  render() {\n    return (\n      <View style={{ flex: 1, backgroundColor: "#81ecec", justifyContent: "center", alignItems: "center" }}>\n        <Text>Hello!!! This is Home screen</Text>\n      </View>\n    );\n  }\n}\n\nclass Profile extends React.Component {\n  static navigationOptions = {};\n  render() {\n    return (\n      <View style={{ flex: 1, backgroundColor: "#81ecec", justifyContent: "center", alignItems: "center" }}>\n        <Text>Hi!!! This is a Profile screen</Text>\n        <Image style={{ width: 50, height: 50 }} source={{ uri:"https://facebook.github.io/react-native/docs/assets/favicon.png"}}/>\n      </View>\n    );\n  }\n}\nexport default Home;\n',j='\n// ... other code from the previous section\n\nimport { DrawerNavigator } from "react-navigation";\n\n// ... other code from the previous section\n\nexport default DrawerNavigator(\n    {   Home: { screen: Home },\n        Profile: { screen: Profile}\n    },\n    {\n      drawerWidth: 250\n    }\n  );\n',D='\nimport React, { Component } from "react";\nimport { NavigationActions } from "react-navigation";\nimport { ScrollView, Text, View, StyleSheet } from "react-native";\n\nclass SideMenu extends Component {\n\n  navigateToScreen = route => () => {\n    const navigateAction = NavigationActions.navigate({\n      routeName: route });\n    this.props.navigation.dispatch(navigateAction);\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.headerContainer}>\n          <Text style={{ fontSize: 22, fontWeight: "600", color: "white" }}> Name </Text>\n        </View>\n        <ScrollView style={styles.scrollview}>\n          <View style={styles.menuView}>\n            <Text style={styles.menuText} onPress={this.navigateToScreen("Home")}> Home </Text>\n          </View>\n          <View style={styles.menuView}>\n            <Text style={styles.menuText} onPress={this.navigateToScreen("Profile")}> Profile </Text>\n          </View>\n        </ScrollView>\n        <View style={styles.footerContainer}>\n          <Text style={{ color: "white" }}>This is my fixed footer</Text>\n        </View>\n      </View>\n    );\n  }\n}\nexport default SideMenu;\n',N='\nimport React from "react";\nimport { View, Text, Button, StyleSheet, Image } from "react-native";\nimport { DrawerNavigator } from "react-navigation";\nimport SideMenu from "./Menu";\n\nclass Home extends React.Component {....}\nclass Profile extends React.Component {.....}\n\nexport default DrawerNavigator(\n  {\n    Home: {\n      screen: Home\n    },\n    Profile: {\n      screen: Profile\n    }\n  },\n  {\n    contentComponent: SideMenu,\n    drawerWidth: 250\n  }\n);\n\n';t.default=function(e){return o.default.createElement(c.default,null,o.default.createElement(s.default,{title:"React native Drawer Navigator"}),o.default.createElement("h2",null,"Creating custom Side Menu using DrawerNavigator in React Native"),o.default.createElement("p",null,"DrawerNavigator is an another type of navigator option in React Native which is used to build a Side Menu with navigation."),o.default.createElement("p",null,"Suppose if your mobile application has a lot of screens and you wanna navigate to each screen directly by clicking menu items there you need a drawerNavigator."),o.default.createElement("p",null,"It gives you a Side Menu like a drawer. It can be open and close by programmatically."),o.default.createElement("h4",null,"1.Creating screens "),o.default.createElement("p",null,"Here we are creating a Home and Profile Screen. We are gonna create a Side Menu that is used to navigate between these screens."),o.default.createElement(p.default,{value:E}),o.default.createElement("img",{src:f.default,alt:"Empty Home screen",height:"50%",width:"50%"}),o.default.createElement("img",{src:v.default,alt:"Empty details screen",height:"50%",width:"50%",style:{position:"relative",left:10}}),o.default.createElement("h4",null,"2.Creating simple side menu drawer "),o.default.createElement("p",null,"First i am gonna import DrawerNavigator and then export DrawerNavigator component."),o.default.createElement("p",null,"DrawerNavigator accepts first argument as an object or a function.This object with key-value pair."),o.default.createElement(p.default,{value:j}),o.default.createElement("img",{src:y.default,alt:"Drawer screen",height:"50%",width:"50%",style:{position:"relative",left:"25%"}}),o.default.createElement("p",null,"Here you can see, DrawerNavigator created a side menu drawer with screen name and navigation options.When you click on the names it will redirect to corresponding pages."),o.default.createElement("h4",null,"3.How to customize DrawerNavigator drawer "),o.default.createElement("p",null,'DrawerNavigator giving a property called "contentComponent". It is used to create a user customizable component.'),o.default.createElement("p",null,'"contentComponent" accepts React component as an input and render it on DrawerNavigator drawer.'),o.default.createElement("h6",null,"First we need to create a Menu.js"),o.default.createElement(p.default,{value:D}),o.default.createElement("h6",null,'Set Menu component as a value to DrawerNavigator property "contentComponent".'),o.default.createElement(p.default,{value:N}),o.default.createElement("p",null,"And the result will be like."),o.default.createElement("img",{src:b.default,alt:"Customized drawer screen",height:"50%",width:"50%",style:{position:"relative",left:"25%"}}),o.default.createElement("p",null),o.default.createElement(u.default,{to:"/reactnative-intro/reactnative-signup"},"Previous"),o.default.createElement(u.default,{to:"/reactnative-intro/reactnative-expo-introduction"},"Next"))},e.exports=t.default}});
//# sourceMappingURL=component---src-pages-reactnative-intro-reactnative-drawer-navigator-jsx-010f3c424a26dd9cd5ac.js.map