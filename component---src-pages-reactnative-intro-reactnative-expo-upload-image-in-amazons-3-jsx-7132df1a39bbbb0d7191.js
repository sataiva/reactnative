webpackJsonp([0x7a517d5c90128800],{"./src/images/expo/FinalScreenShot.png":function(e,t,a){e.exports=a.p+"static/FinalScreenShot.ff14bdd3.png"},"./src/images/expo/cameracapture.png":function(e,t,a){e.exports=a.p+"static/cameracapture.ecac099d.png"},"./src/images/expo/newprojectemptyscreen.png":function(e,t,a){e.exports=a.p+"static/newprojectemptyscreen.bfe0d772.png"},"./src/images/expo/uploadedimage.png":function(e,t,a){e.exports=a.p+"static/uploadedimage.97be6f68.png"},'./node_modules/babel-loader/lib/index.js?{"plugins":["/Users/prakash/Documents/reactjs/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-lodash/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-add-module-exports/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-transform-object-assign/lib/index.js"],"presets":[["/Users/prakash/Documents/reactjs/node_modules/babel-preset-env/lib/index.js",{"loose":true,"uglify":true,"modules":"commonjs","targets":{"browsers":["> 1%","last 2 versions","IE >= 9"]},"exclude":["transform-regenerator","transform-es2015-typeof-symbol"]}],"/Users/prakash/Documents/reactjs/node_modules/babel-preset-stage-0/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-preset-react/lib/index.js"],"cacheDirectory":true}!./src/pages/reactnative-intro/reactnative-expo-upload-image-in-amazons3.jsx':function(e,t,a){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var s=a("./node_modules/react/react.js"),l=n(s),o=a("./node_modules/react-helmet/lib/Helmet.js"),r=n(o),i=a("./src/components/MainLayout.jsx"),u=n(i),c=a("./src/components/CtaButton.jsx"),p=n(c),d=a("./src/components/Block.jsx"),m=n(d),f=a("./src/images/expo/newprojectemptyscreen.png"),g=n(f),h=a("./src/images/expo/FinalScreenShot.png"),b=n(h),y=a("./src/images/expo/cameracapture.png"),w=n(y),E=a("./src/images/expo/uploadedimage.png"),x=n(E),v='\nimport { RNS3 } from \'react-native-aws3\';\n\nconst options = {\n  keyPrefix: "uploads/",\n  bucket: "your-bucket",\n  region: "us-east-1",\n  accessKey: "your-access-key",\n  secretKey: "your-secret-key",\n  successActionStatus: 201\n}\n',j='\n\nconst file = {\n  // uri can also be a file system path (i.e. file://)\n  uri: "assets-library://asset/asset.PNG?id=655DBE66-8008-459C-9358-914E1FB532DD&ext=PNG",\n  name: "image.png",\n  type: "image/png"\n}\n\n',k='\n\nRNS3.put(file, options).then(response => {\n  if (response.status !== 201)\n    throw new Error("Failed to upload image to S3");\n  console.log(response.body);\n  /**\n   * {\n   *   postResponse: {\n   *     bucket: "your-bucket",\n   *     etag : "9f620878e06d28774406017480a59fd4",\n   *     key: "uploads/image.png",\n   *     location: "https://your-bucket.s3.amazonaws.com/uploads%2Fimage.png"\n   *   }\n   * }\n   */\n});\n\n',S='\n// ... other code from the previous section\n\n{this.state.switchValue ? (\n  <View style={styles.buttonsView}>\n    <View style={styles.captureButtonView}>\n      <TouchableOpacity\n        style={styles.cameraButtons}\n        onPress={this.snap}\n      >\n        <Text\n          style={{ fontSize: 18, marginBottom: 10, color: "white" }}\n        >\n          Capture\n        </Text>\n      </TouchableOpacity>\n    </View>\n    <View style={styles.captureButtonView}>\n      <TouchableOpacity\n        style={styles.cameraButtons}\n        onPress={this.upload}\n      >\n        <Text\n          style={{ fontSize: 18, marginBottom: 10, color: "white" }}\n        >\n          Upload\n        </Text>\n      </TouchableOpacity>\n    </View>\n  </View>\n) : null}\n\n// ... other code from the previous section\n',_="\nupload = () => {\n  const file = {\n    uri: this.state.imageuri,\n    name: "+(new Date).getTime()+'.jpg,\n    type: "image/jpeg"\n  };\n  const options = {\n    keyPrefix: "ts/",\n    bucket: "celeb-c4u",\n    region: "eu-west-1",\n    accessKey: "AKIAI2NHLR7A5W2R3OLA",\n    secretKey: "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",\n    successActionStatus: 201\n  };\n  return RNS3.put(file, options)\n    .then(response => {\n      if (response.status !== 201)\n        throw new Error("Failed to upload image to S3");\n      else {\n        console.log(\n          "Successfully uploaded image to s3. s3 bucket url: ",\n          response.body.postResponse.location\n        );\n        this.setState({\n          url: response.body.postResponse.location\n        });\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\n',A='\n<Image\n  source={{uri: this.state.imageuri}}\n  style={styles.uploadedImage}\n  resizeMode="contain"\n/>\n';t.default=function(e){return l.default.createElement(u.default,null,l.default.createElement(r.default,{title:"React native upload image"}),l.default.createElement("h2",null,"Upload captured image into amazons3 "),l.default.createElement("h4",null,"App.js file(for reference): "," ",l.default.createElement("a",{href:"https://gist.github.com/PrakashMurugan/b443c44aea82f6639acbd12bf6612fdd"}," ","Reactnative+S3+Imageupload"," ")),l.default.createElement("h4",null,"1. Create a new app using Expo development tool"),l.default.createElement("p",null,l.default.createElement("a",{href:"/reactnative-intro/reactnative-expo-introduction"},"In previous session,"),"we saw how to create a new React native app using expo tool.Using the same steps here i am gonna create a new app."),l.default.createElement("img",{src:g.default,alt:"Expo new project folder structure",height:"50%",width:"50%",style:{position:"relative",left:"25%",backgroundColor:"#000000"}}),l.default.createElement("h4",null,"2. Create a camera preview using Expo camera component and capture picture"),l.default.createElement("p",null,"I already wrote a guide about",l.default.createElement("a",{href:"/reactnative-intro/reactnative-expo-introduction"}," ","how to create a Expo app "," "),"and",l.default.createElement("a",{href:"/reactnative-intro/reactnative-expo-camera"}," ","how to create and capture picture"," "),"using Camera."),l.default.createElement("img",{src:b.default,alt:"Screen with capture button and functionlaityI",height:"50%",width:"50%",style:{position:"relative",left:"25%"}}),l.default.createElement("h4",null,"3. Upload pictures using React native AWS S3"),l.default.createElement("p",null,"Here i am going to use the package"," ",l.default.createElement("a",{href:"https://github.com/benjreinhart/react-native-aws3"}," ","benjreinhart/react-native-aws3"),"."),l.default.createElement("p",null,"Installation: ",l.default.createElement("b",null,"npm install --save react-native-aws3")),l.default.createElement("h6",null,"i. Import package,give correct values to amazon s3 bucket"),l.default.createElement(m.default,{value:v}),l.default.createElement("p",null,"Next we need to give file path.File name and type is important when uploading files into s3."),l.default.createElement(m.default,{value:j}),l.default.createElement("p",null,"Next we need upload image by passing file and options to a function."),l.default.createElement(m.default,{value:k}),l.default.createElement("h4",null,"4. Now we have to integrate our app with this package functionality"),l.default.createElement("p",null,'Add another button called "Upload" in the screen.And invoke "upload" function when it pressed.'),l.default.createElement("p",null,"App.js"),l.default.createElement(m.default,{value:S}),l.default.createElement("p",null,"Then we need to write a upload function."),l.default.createElement("p",null,'Create a state variable called imageuri to store captured image and send them as input to s3 upload function "put".'),l.default.createElement("p",null,"Suppose if you successfully captured image and stored that into cache and imageuri state variable, RNS3.put will return the response which has results of image upload. From that result object we can find our uploaded amazon s3 uri."),l.default.createElement(m.default,{value:_}),l.default.createElement("h4",null,"5. Show uploaded picture in the image component"),l.default.createElement("p",null,'For this i am going to check state variable "imageuri" if it\'s empty show nothing or show image.'),l.default.createElement("p",null,"Pass image url to Image component source property."),l.default.createElement(m.default,{value:A}),l.default.createElement("img",{src:w.default,alt:"Capturing image",height:"50%",width:"50%"}),l.default.createElement("img",{src:x.default,alt:"Showing uploaded image",height:"50%",width:"50%",style:{position:"relative",left:10}}),l.default.createElement("h4",null,"App.js file"," ",l.default.createElement("a",{href:"https://gist.github.com/PrakashMurugan/b443c44aea82f6639acbd12bf6612fdd"}," ","Gist link"," ")),l.default.createElement("p",null),l.default.createElement(p.default,{to:"/reactnative-intro/reactnative-expo-camera"},"Previous"),l.default.createElement(p.default,{to:"/reactnative-intro/"},"Next"))},e.exports=t.default}});
//# sourceMappingURL=component---src-pages-reactnative-intro-reactnative-expo-upload-image-in-amazons-3-jsx-7132df1a39bbbb0d7191.js.map