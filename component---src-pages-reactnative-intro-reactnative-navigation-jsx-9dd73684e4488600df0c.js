webpackJsonp([0x88934582d62f7000],{'./node_modules/babel-loader/lib/index.js?{"plugins":["/Users/prakash/Documents/reactjs/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-lodash/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-add-module-exports/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-plugin-transform-object-assign/lib/index.js"],"presets":[["/Users/prakash/Documents/reactjs/node_modules/babel-preset-env/lib/index.js",{"loose":true,"uglify":true,"modules":"commonjs","targets":{"browsers":["> 1%","last 2 versions","IE >= 9"]},"exclude":["transform-regenerator","transform-es2015-typeof-symbol"]}],"/Users/prakash/Documents/reactjs/node_modules/babel-preset-stage-0/lib/index.js","/Users/prakash/Documents/reactjs/node_modules/babel-preset-react/lib/index.js"],"cacheDirectory":true}!./src/pages/reactnative-intro/reactnative-navigation.jsx':function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var s=n("./node_modules/react/react.js"),l=a(s),r=n("./src/components/MainLayout.jsx"),o=a(r),i=n("./src/components/CtaButton.jsx"),u=a(i),c=n("./src/components/Block.jsx"),m=a(c),d="\nyarn add react-navigation\n",p="\nyarn add react-native-side-menu\n",g='\nimport {StackNavigator} from \'react-navigation\';\nimport HomeScreen from "../src/screens/Home.js";\nimport ProfileScreen from "../src/screens/Profile.js";\n\nexport default class AppNavigator extends React.Component {\n  render=()=>{\n    return <App/>\n  }\n}\n\nconst App = StackNavigator({\n    Home: { screen: HomeScreen },\n    Profile: { screen: ProfileScreen }\n});\n',f='\nimport React from "react";\nimport PropTypes from "prop-types";\nimport { StyleSheet, ScrollView, View, Text, Image, TouchableOpacity } from "react-native";\nimport { graphqlFetch } from "../utils/graphql";\n\nconst window = Dimensions.get("window");\nexport default class Menu extends React.Component {\n  state = {};\n  render() {\n    return (\n      <ScrollView scrollsToTop={false} style={styles.menu}>\n        <View style={styles.menucontainer}>\n          <View style={styles.menuheader}>\n            <Image style={styles.menuheaderlogo} source={require("../images/user.png")}/>\n            <Text style={styles.menuheadertext}>Name</Text>\n          </View>\n\n          <View style={styles.menuview}>\n            <TouchableOpacity style={styles.menubutton} onPress={() => { this.props.togglemenu(); this.props.navigate("Home"); }}>\n            <Text style={styles.buttonText}>Home</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.menubutton} onPress={() => { this.props.togglemenu(); this.props.navigate("Profile");}}>\n            <Text style={styles.buttonText}>Profile</Text>\n          </TouchableOpacity>\n          </View>\n          <View style={styles.footercontainer}>\n            <Text style={styles.footertext}>@2018</Text>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n',h='\nimport React, { Component } from "react";\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from "react-native";\nimport SideMenu from "react-native-side-menu";\nimport Menu from "../components/Menu";\n\nconst image = require("../images/menu.png");\n\nexport default class Basic extends Component {\n  state = { isOpen: false };\n\n  toggle = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  updateMenuState = isOpen => {\n    this.setState({ isOpen });\n  };\n\n  render() {\n    const { navigate } = this.props.navigation;\n    const menu = <Menu navigate={navigate} signout={this.props.screenProps.signout} togglemenu={this.toggle}/>;\n    const children = React.Children.map(this.props.children, child => {\n      return React.cloneElement(child, {\n        navigate: navigate,\n        screenProps: this.props.screenProps,\n        togglemenu: this.toggle\n      });\n    });\n\n    return (\n      <SideMenu\n        menu={menu}\n        isOpen={this.state.isOpen}\n        onChange={isOpen => this.updateMenuState(isOpen)}\n      >\n        {children}\n      </SideMenu>\n    );\n  }\n}\n';t.default=function(e){return l.default.createElement(o.default,null,l.default.createElement("h2",null,"React Native Navigation"),l.default.createElement("h4",null,"1. Add Navigation Package"),l.default.createElement("p",null,"To navigate between apps multiple screen, react native providing a package name called",l.default.createElement("a",{href:"https://reactnavigation.org/docs/getting-started.html"},l.default.createElement("b",null," react-navigation")),"."),l.default.createElement("p",null,"React Navigation provides an easy to use navigation solution, with the ability to present common ",l.default.createElement("b",null,"stack navigation")," and",l.default.createElement("b",null," tabbed navigation "),"patterns on both iOS and Android."),l.default.createElement(m.default,{value:d,lang:"bash"}),l.default.createElement("h4",null,"2. Add Side Menu Package"),l.default.createElement("p",null,"Here i am gonna use Stack Navigation with ",l.default.createElement("b",null,"Side Menu"),".To create a side menu we need a",l.default.createElement("a",{href:"https://reactnavigation.org/docs/getting-started.html"},l.default.createElement("b",null," react-native-side-menu ")),"package which is also support in both iOS and Android."),l.default.createElement(m.default,{value:p}),l.default.createElement("h4",null,"3. Sample Stack Navigation syntax"),l.default.createElement("p",null,"Stack Navigator accept object as an argument where each screen specified by a key value pair. Using those ",l.default.createElement("b",null," Key ")," only we can navigate through screens. Ex. Home, Profile."),l.default.createElement("p",null,l.default.createElement("small",null,"AppNavigator.js")),l.default.createElement(m.default,{value:g}),l.default.createElement("h4",null,"4. Create a Menu component"),l.default.createElement("p",null,"Here i am gonna create a component which has navigation menu names. Designed side menu interface."),l.default.createElement("p",null,l.default.createElement("small",null,"Menu.js")),l.default.createElement(m.default,{value:f}),l.default.createElement("h4",null,"4. Create a SideMenu"),l.default.createElement("p",null,"Here i am gonna use a previous Menu component to display as a side menu when opening menu and inject them with navigation properties"),l.default.createElement("p",null,l.default.createElement("small",null,"SideMenu.js")),l.default.createElement(m.default,{value:h}),l.default.createElement(u.default,{to:"/reactnative-intro/reactnative-signup"},"Previous"),l.default.createElement(u.default,{to:"/reactnative-intro/"},"Next"))},e.exports=t.default}});
//# sourceMappingURL=component---src-pages-reactnative-intro-reactnative-navigation-jsx-9dd73684e4488600df0c.js.map